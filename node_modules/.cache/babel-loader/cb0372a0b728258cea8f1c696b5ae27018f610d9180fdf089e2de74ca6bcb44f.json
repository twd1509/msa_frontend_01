{"ast":null,"code":"var _jsxFileName = \"C:\\\\kit\\\\react\\\\video-app\\\\src\\\\aiRequest\\\\SrvyResponse.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport \"../aiRequest/css/reqStyle.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SrvyResponse = () => {\n  _s();\n  const {\n    email,\n    groupNo\n  } = useParams(); // URL에서 email 가져오기\n  //const groupNo = 1;  // groupNo를 고정값 1로 설정\n  const navigate = useNavigate(); // 뒤로 가기 기능 추가\n  const [surveyData, setSurveyData] = useState([]);\n  const [responses, setResponses] = useState([]);\n  console.log(\"Router param email:\", email, \"groupNo:\", groupNo);\n\n  // ✅ 1. 설문 응답 여부 확인 후 차단\n  useEffect(() => {\n    if (!email || !groupNo) {\n      console.error(\"email or groupNo is undefined.\");\n      return;\n    }\n    fetch(`http://localhost:9193/api/SrvyResponse/check?email=${email}&groupNo=${groupNo}`).then(response => {\n      if (response.status === 403) {\n        alert(\"이미 응답한 설문입니다.\");\n        navigate(-1); // ❗ 자동으로 뒤로 가기\n        return;\n      }\n      return response.json();\n    }).catch(error => {\n      console.error(\"❌ 오류 발생:\", error);\n      alert(\"설문 응답 여부 확인 중 문제가 발생했습니다.\");\n      navigate(-1);\n    });\n  }, [email, groupNo, navigate]);\n\n  // 이메일을 바탕으로 설문조사 데이터 불러오기\n  useEffect(() => {\n    if (!email || !groupNo) {\n      console.error(\"email or groupNo is undefined.\");\n      return;\n    }\n\n    // UserGetSrvy API 호출\n    fetch(`http://localhost:9193/api/UserGetSrvy?email=${email}&groupNo=${groupNo}`).then(response => response.json()).then(data => {\n      console.log('Received survey data:', data);\n      setSurveyData(data);\n    }).catch(error => {\n      console.error(\"Error fetching survey data:\", error);\n      alert(\"설문 데이터를 가져오는 중 오류가 발생했습니다.\");\n    });\n  }, [email, groupNo]);\n  const handleResponseChange = (questionIndex, value) => {\n    const newResponses = [...responses];\n    newResponses[questionIndex] = value;\n    setResponses(newResponses);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    const formData = {\n      email: email,\n      groupNo: groupNo,\n      responses: responses\n    };\n    console.log('Responses:', formData);\n    fetch('http://localhost:9193/api/SrvyResponse', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json; charset=utf-8'\n      },\n      body: JSON.stringify(formData)\n    }).then(response => {\n      if (response.ok) {\n        alert(\"응답이 성공적으로 제출되었습니다.\");\n      } else {\n        alert(\"응답 제출 실패: \" + response.status);\n      }\n    }).catch(error => {\n      console.error('Error:', error);\n      alert(\"응답 제출 중 문제가 발생했습니다.\");\n    });\n  };\n  if (!surveyData || !surveyData.questions === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uC870\\uC0AC \\uB370\\uC774\\uD130\\uB97C \\uBD88\\uB7EC\\uC624\\uB294 \\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"aiR-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uB9CC\\uC871\\uB3C4 \\uC870\\uC0AC \\uC751\\uB2F5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [surveyData.questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"aiR-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: question.srvyCn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this), question.svyType === '객관식' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: question.chc.split(',').map((choice, optionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: `question-${index}`,\n              value: choice,\n              onChange: e => handleResponseChange(index, e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: choice\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 41\n            }, this)]\n          }, optionIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: responses[index] || '',\n          onChange: e => handleResponseChange(index, e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"\\uC751\\uB2F5 \\uC81C\\uCD9C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n};\n_s(SrvyResponse, \"aoD7kNRKFq+L4OuPF4b0+h/p9JE=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = SrvyResponse;\nexport default SrvyResponse;\nvar _c;\n$RefreshReg$(_c, \"SrvyResponse\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","jsxDEV","_jsxDEV","SrvyResponse","_s","email","groupNo","navigate","surveyData","setSurveyData","responses","setResponses","console","log","error","fetch","then","response","status","alert","json","catch","data","handleResponseChange","questionIndex","value","newResponses","handleSubmit","event","preventDefault","formData","method","headers","body","JSON","stringify","ok","questions","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","map","question","index","srvyCn","svyType","chc","split","choice","optionIndex","type","name","onChange","e","target","required","_c","$RefreshReg$"],"sources":["C:/kit/react/video-app/src/aiRequest/SrvyResponse.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport \"../aiRequest/css/reqStyle.css\";\r\n\r\nconst SrvyResponse = () => {\r\n    const { email, groupNo } = useParams();  // URL에서 email 가져오기\r\n    //const groupNo = 1;  // groupNo를 고정값 1로 설정\r\n    const navigate = useNavigate();  // 뒤로 가기 기능 추가\r\n    const [surveyData, setSurveyData] = useState([]);\r\n    const [responses, setResponses] = useState([]);\r\n\r\n    console.log(\"Router param email:\", email, \"groupNo:\", groupNo);\r\n\r\n    // ✅ 1. 설문 응답 여부 확인 후 차단\r\n    useEffect(() => {\r\n        if (!email || !groupNo) {\r\n            console.error(\"email or groupNo is undefined.\");\r\n            return;\r\n        }\r\n\r\n        fetch(`http://localhost:9193/api/SrvyResponse/check?email=${email}&groupNo=${groupNo}`)\r\n            .then(response => {\r\n                if (response.status === 403) {\r\n                    alert(\"이미 응답한 설문입니다.\");\r\n                    navigate(-1);  // ❗ 자동으로 뒤로 가기\r\n                    return;\r\n                }\r\n                return response.json();\r\n            })\r\n            .catch(error => {\r\n                console.error(\"❌ 오류 발생:\", error);\r\n                alert(\"설문 응답 여부 확인 중 문제가 발생했습니다.\");\r\n                navigate(-1);\r\n            });\r\n    }, [email, groupNo, navigate]);\r\n\r\n     // 이메일을 바탕으로 설문조사 데이터 불러오기\r\n     useEffect(() => {\r\n        if (!email || !groupNo) {\r\n            console.error(\"email or groupNo is undefined.\");\r\n            return;\r\n        }\r\n\r\n    // UserGetSrvy API 호출\r\n        fetch(`http://localhost:9193/api/UserGetSrvy?email=${email}&groupNo=${groupNo}`)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log('Received survey data:', data);\r\n            setSurveyData(data);\r\n        })\r\n        .catch(error => {\r\n            console.error(\"Error fetching survey data:\", error);\r\n            alert(\"설문 데이터를 가져오는 중 오류가 발생했습니다.\");\r\n        });\r\n    }, [email, groupNo]);\r\n\r\n    const handleResponseChange = (questionIndex, value) => {\r\n        const newResponses = [...responses];\r\n        newResponses[questionIndex] = value;\r\n        setResponses(newResponses);\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const formData = {\r\n            email: email,\r\n            groupNo: groupNo,\r\n            responses: responses\r\n        };\r\n\r\n        console.log('Responses:', formData);\r\n        fetch('http://localhost:9193/api/SrvyResponse', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json; charset=utf-8'\r\n            },\r\n            body: JSON.stringify(formData)\r\n        })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                alert(\"응답이 성공적으로 제출되었습니다.\");\r\n            } else {\r\n                alert(\"응답 제출 실패: \" + response.status);\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error:', error);\r\n            alert(\"응답 제출 중 문제가 발생했습니다.\");\r\n        });\r\n    };\r\n\r\n    if (!surveyData || !surveyData.questions === 0) {\r\n        return <div>조사 데이터를 불러오는 중...</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"aiR-container\">\r\n            <h1>만족도 조사 응답</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                {surveyData.questions.map((question, index) => (\r\n                    <div key={index} className=\"aiR-box\">\r\n                        <h3>{question.srvyCn}</h3>\r\n                        {question.svyType === '객관식' ? (\r\n                            <div>\r\n                                {question.chc.split(',').map((choice, optionIndex) => (\r\n                                    <div key={optionIndex}>\r\n                                        <input\r\n                                            type=\"radio\"\r\n                                            name={`question-${index}`}\r\n                                            value={choice}\r\n                                            onChange={(e) => handleResponseChange(index, e.target.value)}\r\n                                            required\r\n                                        />\r\n                                        <label>{choice}</label>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        ) : (\r\n                            <input\r\n                                type=\"text\"\r\n                                value={responses[index] || ''}\r\n                                onChange={(e) => handleResponseChange(index, e.target.value)}\r\n                                required\r\n                            />\r\n                        )}\r\n                    </div>\r\n                ))}\r\n                <div className=\"button-container\">\r\n                    <button type=\"submit\">응답 제출</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SrvyResponse;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}